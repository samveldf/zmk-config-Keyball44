#define DEFAULT 0
#define NUM     1
#define SYM     2
#define FUN     3
#define MOUSE   4
#define SCROLL  5
#define SNIPE   6

#include <behaviors/mouse_keys.dtsi>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/mouse.h>

&lt {
    tapping-term-ms = <240>;
    flavor = "balanced";
    quick-tap-ms = <150>;
};

&mt {
    tapping-term-ms = <200>;
    flavor = "tap-preferred";
    quick-tap-ms = <150>;
};

&caps_word { continue-list = <UNDERSCORE MINUS>; };

/ {
    // custom shift using mod-morph 

    behaviors {
        cmqus: comma_question {
            compatible = "zmk,behavior-mod-morph";
            label = "COMMA_QUESTION";
            #binding-cells = <0>;
            bindings = <&kp COMMA>, <&kp QUESTION>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };

        dtsmi: dot_semi {
            compatible = "zmk,behavior-mod-morph";
            label = "DOT_SEMI";
            #binding-cells = <0>;
            bindings = <&kp DOT>, <&kp SEMI>;

            mods = <(MOD_LSFT|MOD_RSFT)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "QWRT";
            bindings = <
&kp TAB         &kp Q         &kp W                                 &kp E        &kp R             &kp T                     &kp Y        &kp U  &kp I      &kp O    &kp P      &kp DELETE
&kp LCTRL       &kp A         &kp S                                 &kp D        &kp F             &kp G                     &kp H        &kp J  &kp K      &kp L    &kp SEMI   &kp ENTER
&kp LEFT_SHIFT  &kp Z         &kp X                                 &kp C        &kp V             &kp B                     &kp N        &kp M  &kp COMMA  &kp DOT  &kp SLASH  &kp RIGHT_SHIFT
&kp LEFT_ALT    &kp LEFT_WIN  &mt LEFT_CONTROL LANG_ZENKAKUHANKAKU  &lt 4 SPACE  &lt 5 LANGUAGE_4             &kp BACKSPACE  &lt 2 ENTER                                        &kp PRINTSCREEN
            >;
        };

        number_layer {
            label = "NUM";
            bindings = <
&none   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NUMBER_4  &kp NUMBER_5              &kp NUMBER_6  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp NUMBER_0  &none
&none   &kp LEFT      &kp DOWN      &kp UP_ARROW  &kp RIGHT     &none                     &none         &none         &none         &none         &none         &none
&none   &none         &none         &none         &none         &none                     &none         &none         &trans        &trans        &none         &none
&trans  &trans        &trans        &trans        &trans                          &trans  &trans                                                                &trans
            >;
        };

        symbol_layer {
            label = "SYM";
            bindings = <
&kp ESCAPE               &kp EXCLAMATION  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp ASTERISK                   &kp LEFT_PARENTHESIS  &kp EXCLAMATION  &kp CARET  &kp LEFT_BRACKET  &kp DOLLAR    &kp GRAVE
&kp LANG_HIRAGANA        &bt BT_CLR       &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp RIGHT_BRACKET              &kp BACKSLASH         &kp MINUS        &kp PLUS   &kp HASH          &kp SQT       &kp AT_SIGN
&kp LANG_ZENKAKUHANKAKU  &kp UNDERSCORE   &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp RIGHT_BRACE                &kp PIPE              &kp PLUS         &kp EQUAL  &kp LEFT_BRACE    &kp QUESTION  &none
&kp NUMBER_0             &none            &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2                         &trans  &trans                                                                            &trans
            >;
        };

        function_layer {
            label = "FUN";
            bindings = <
&none   &kp F1  &kp F2   &kp F3   &kp F4   &none              &none  &none  &none  &none  &none  &none
&none   &kp F5  &kp F6   &kp F7   &kp F8   &none              &none  &none  &none  &none  &none  &none
&none   &kp F9  &kp F10  &kp F11  &kp F12  &none              &none  &none  &none  &none  &none  &none
&trans  &trans  &trans   &trans   &trans              &trans  &mo 3                              &trans
            >;
        };

        mouse_layer {
            label = "MOUSE";
            bindings = <
&none   &kp F1  &kp F2    &kp F3          &kp F4     &kp F5              &kp F6         &kp F7          &kp F8          &kp F9     &kp F10    &kp F11
&none   &none   &none     &kp UP_ARROW    &none      &none               &kp PAGE_UP    &mkp LCLK       &kp UP_ARROW    &mkp RCLK  &mkp MCLK  &kp F12
&none   &none   &kp LEFT  &kp DOWN_ARROW  &kp RIGHT  &none               &kp PAGE_DOWN  &kp LEFT_ARROW  &kp DOWN_ARROW  &kp RIGHT  &none      &none
&trans  &trans  &trans    &trans          &trans                 &trans  &trans                                                               &none
            >;
        };

        scroll_layer {
            label = "SCROLL";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };

        snipe_layer {
            label = "SNIPE";
            bindings = <
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans  &trans              &trans  &trans  &trans  &trans  &trans  &trans
&trans  &trans  &trans  &trans  &trans              &trans  &trans                                  &trans
            >;
        };
    };
};
